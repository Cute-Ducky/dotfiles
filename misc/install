#!/bin/sh
. misc/m4
replace_system_file(){
   # Usage
   # replace_system_file <to_replace> <replace_with> <filename>
   m4 -D$1="$2" system/$3.nix.template > system/$3.nix
}
create_nixops(){ 
   replace_system_file tailscale_ip $(tailscale ip -4 server) config-nixops

   if [ -e misc/nixops ]
   then
      if dialog --stdout --title "Deployment already exists" \
         --backtitle "Deployment already exists" \
         --yesno "Do you want to delete the old deployment and recreate it?" 7 60
      then 
         nixops delete --force -d $(cat misc/nixops)
         printf "$(nixops create system/config-nixops.nix -d server)" > misc/nixops
      else
         printf "no deployment created"
      fi
   else
      printf "created new deployment"
      printf "$(nixops create system/config-nixops.nix -d server)" > misc/nixops
   fi
}

check_env_file()
{
   if [ -e misc/.env ]
   then
      printf "missing env file. create a env file by running nix-shell"
   fi
}
menu()
{
task rm-prepare
choice="$(dialog --clear --backtitle 'Config selection' --title 'Config selection' --menu 'select the config you want to install' 15 40 4 1 'nixconf' 2 'snow' 3 'flash-os' 4 'server' 5 'plan9' 2>&1 >/dev/tty )"
case "$choice" in
   1) printf 'CONF=nixconf\n' > misc/.env; cmd="task auto-snapshot"
   ;;
   2) printf 'CONF=snow\n' > misc/.env
   ;;
   3) printf 'CONF=flash-os\n' > misc/.env
   ;;
   4) printf 'CONF=server\n' > misc/.env
   ;;
   5) printf 'CONF=plan9\n' > misc/.env
   ;;
   *) exit 0
   ;;
esac
. ./misc/.env
if [ $CONF = "server" ]
then
   create_nixops
   task prepare
   nixops deploy -d $(cat misc/nixops)
else

   choice="$(dialog --clear --backtitle 'User selection' --title 'User selection' --menu 'select the user you want to install' 15 40 4 1 'glenda' 2 'none' 2>&1 >/dev/tty )"
   task cp-hardware
   case "$choice" in
      1) printf 'USER=glenda' >> misc/.env; clear; task apply-user; clear=""
      ;;
      2) printf 'USER=none' >> misc/.env; clear="clear"
      ;;
      *) printf 'USER=none' >> misc/.env; clear="clear"
      ;;
esac
   $clear
   $cmd
   task apply
fi
}
help="setconf         set the config
setup-nixops    setup the nixops deployment"
case $1 in
   "setconf") sed -i "s/$(task env | awk 'NR==1')/$2/g" misc/.env;exit 0
   ;;
   "create-nixops") create_nixops
   ;;
   "help") printf "$help"
   ;;
   *) menu
   ;;
esac
